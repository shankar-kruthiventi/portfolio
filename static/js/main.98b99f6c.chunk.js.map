{"version":3,"sources":["assets/images/shankar-kruthiventi.jpg","pages/navbar/navbar.jsx","pages/home/home.jsx","pages/about/about.jsx","components/portfolio.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar","props","toggleMenu","element","document","getElementById","overlay","style","display","scrollIntoView","id","block","className","onClick","icon","faHome","faUserAlt","faFile","faBriefcase","faImages","faAddressCard","faCog","changeTheme","faMoon","Home","href","rel","target","faLinkedinIn","faFacebookF","faGithubAlt","faArrowRight","viewBox","xmlns","xmlnsXlink","mask-type","d","mask","x","y","xlinkHref","ProfileImg","About","faDownload","Portfolio","height","App","useState","theme","setTheme","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98b99f6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/shankar-kruthiventi.f0442311.jpg\";","import React from 'react';\r\n\r\nimport './navbar.scss';\r\n\r\nimport { faCog, faMoon, faHome, faUserAlt, faFile, faBriefcase, faAddressCard, faImages } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Navbar = (props) => {\r\n    \r\n    const toggleMenu = () => {\r\n        let element = document.getElementById('menu');\r\n        let overlay = document.getElementById('hiddenOverlay');\r\n        if(element.style.display === 'grid') {\r\n            element.style.display = 'none';\r\n        } else {\r\n            element.style.display = 'grid';\r\n            overlay.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    const scrollIntoView = (id) => {\r\n        document.getElementById(id).scrollIntoView({block: \"start\"});\r\n    }\r\n    \r\n    return [\r\n        <div className=\"navbar-container\">\r\n            <div id=\"menu\" className=\"menu\" onClick={toggleMenu}>\r\n                <div className=\"menu-item\" onClick={() => scrollIntoView('home')}>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                        Home\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\" onClick={() => scrollIntoView('about')}>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faUserAlt} />\r\n                        About\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faFile} />\r\n                        Skills\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faBriefcase} />\r\n                        Qualifications\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faImages} />\r\n                        Portfolio\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faAddressCard} />\r\n                        Contact\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar\">\r\n                <div className=\"float_left\">Shankar</div>\r\n                <div className=\"float_right\" onClick={toggleMenu}>\r\n                    <FontAwesomeIcon icon={faCog} />\r\n                </div>\r\n                <div className=\"float_right\" onClick={props.changeTheme}>\r\n                    <FontAwesomeIcon icon={faMoon} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ];\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../../styles/theme.scss';\r\nimport './home.scss';\r\nimport ProfileImg from '../../assets/images/shankar-kruthiventi.jpg';\r\nimport Navbar from '../navbar/navbar';\r\n\r\nimport { faFacebookF, faGithubAlt, faLinkedinIn } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"home-container\" id=\"home\">\r\n            <div className=\"media-image-container\">\r\n                <div className=\"media-container\">\r\n                    <a href=\"https://www.linkedin.com/in/shankarkruthiventi/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faLinkedinIn} />\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/shankar.kruthiventi/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faFacebookF} />\r\n                    </a>\r\n                    <a href=\"https://github.com/shankar-kruthiventi\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faGithubAlt} />\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"home home-desktop\">\r\n                    <div className=\"name\">Hi, I'm Shankar</div>\r\n                    <div className=\"designation\">Front-end Engineer</div>\r\n                    <div className=\"experience\">\r\n                        I have 5+ years of experience in Modern Front-end Development.\r\n                    </div>\r\n                    <div className=\"experience\">\r\n                        Have built Aesthetic and Functional Applications using Angular, React and Node\r\n                    </div>\r\n\r\n                    <div className=\"contact-button-container\">\r\n                        <button className=\"contact-button\">\r\n                            Contact Me &nbsp;\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"image-container\">\r\n                    <svg className=\"home_blob\" viewBox=\"0 0 200 187\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n                        <mask id=\"mask0\" mask-type=\"alpha\">\r\n                            <path d=\"M190.312 36.4879C206.582 62.1187 201.309 102.826 182.328 134.186C163.346 165.547 \r\n                            130.807 187.559 100.226 186.353C69.6454 185.297 41.0228 161.023 21.7403 129.362C2.45775 \r\n                            97.8511 -7.48481 59.1033 6.67581 34.5279C20.9871 10.1032 59.7028 -0.149132 97.9666 \r\n                            0.00163737C136.23 0.303176 174.193 10.857 190.312 36.4879Z\"/>\r\n                        </mask>\r\n                        <g mask=\"url(#mask0)\">\r\n                            <path d=\"M190.312 36.4879C206.582 62.1187 201.309 102.826 182.328 134.186C163.346 \r\n                            165.547 130.807 187.559 100.226 186.353C69.6454 185.297 41.0228 161.023 21.7403 \r\n                            129.362C2.45775 97.8511 -7.48481 59.1033 6.67581 34.5279C20.9871 10.1032 59.7028 \r\n                            -0.149132 97.9666 0.00163737C136.23 0.303176 174.193 10.857 190.312 36.4879Z\"/>\r\n                            <image className=\"home__blob-img\" x=\"0\" y=\"-8\" xlinkHref={ProfileImg}/>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"home home-mobile\">\r\n                <div className=\"name\">Hi, I'm Shankar</div>\r\n                <div className=\"designation\">Front-end Engineer</div>\r\n                <div className=\"experience\">\r\n                    I have 5+ years of experience in Modern Front-end Development.\r\n                </div>\r\n                <div className=\"experience\">\r\n                    Have built Aesthetic and Functional Applications using Angular, React and Node\r\n                </div>\r\n\r\n                <div className=\"contact-button-container\">\r\n                    <button className=\"contact-button\">\r\n                        Contact Me &nbsp;\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <Navbar changeTheme={props.changeTheme} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../../styles/theme.scss';\r\nimport './about.scss';\r\n\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-main-container\">\r\n            <div className=\"about-title\">My Introduction</div>\r\n            <div className=\"about-container\" id=\"about\">\r\n                <div className=\"about-image\"></div>\r\n                <div className=\"about-desc-container\">\r\n                    <div className=\"about-desc\">\r\n                        Web developer with Extensive Knowledge in Modern Web Technologies. Have worked upon various JavaScript \r\n                        frameworks and libraries.<br /> My Skill Set includes HTML 5, CSS 3, JavaScript, TypeScipt, Angular, React And Node.\r\n                    </div>\r\n                    <div className=\"about\">\r\n                        <div className=\"about-col\">\r\n                            <div>05+</div>\r\n                            <div>Years of experience</div>\r\n                        </div>\r\n                        <div className=\"about-col\">\r\n                            <div>600000+</div>\r\n                            <div>completed lines of code</div>\r\n                        </div>\r\n                        <div className=\"about-col\">\r\n                            <div>03+</div>\r\n                            <div>Worked with Companies</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"about-resume-button\">\r\n                        <button className=\"resume-button\">Download CV &nbsp;\r\n                    <FontAwesomeIcon icon={faDownload} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport '../styles/theme.scss';\r\nimport './portfolio.scss';\r\n\r\nimport Home from '../pages/home/home';\r\nimport About from '../pages/about/about';\r\n\r\nconst Portfolio = (props) => {\r\n\r\n    const toggleOverlay = () => {\r\n        let overlay = document.getElementById('hiddenOverlay');\r\n        let element = document.getElementById('menu');\r\n        element.style.display = 'none';\r\n        overlay.style.display = 'none';\r\n    }\r\n\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <div id=\"potrait\">\r\n                <Home changeTheme={props.changeTheme} />\r\n                <About />\r\n                <div style={{ height: '600px' }}>sdfsdf</div>\r\n                <div id=\"hiddenOverlay\" onClick={toggleOverlay}></div>\r\n            </div>\r\n            <div id=\"landscape\">\r\n                <div className=\"message\">Please rotate your device.</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Portfolio;","import React, { useState } from 'react';\r\nimport './App.scss';\r\n\r\nimport Portfolio from './components/portfolio';\r\n\r\nfunction App() {\r\n\r\n  const [theme, setTheme] = useState('dark');\r\n\r\n  const changeTheme = () => {\r\n      return theme === 'light' ? setTheme('dark') : setTheme('light');\r\n  }\r\n\r\n  return (\r\n    <div className={`App ${theme}`}>\r\n      <Portfolio changeTheme={changeTheme}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}