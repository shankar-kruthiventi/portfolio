{"version":3,"sources":["pages/navbar/navbar.jsx","pages/home/home.jsx","pages/about/about.jsx","components/portfolio.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar","props","toggleMenu","element","document","getElementById","overlay","style","display","scrollIntoView","id","block","onClick","className","icon","faHome","faUserAlt","faFile","faBriefcase","faImages","faAddressCard","faCog","changeTheme","faMoon","Home","href","rel","target","faLinkedinIn","faFacebookF","faGithubAlt","faArrowRight","About","faDownload","Portfolio","height","App","useState","theme","setTheme","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b358517.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './navbar.scss';\r\n\r\nimport { faCog, faMoon, faHome, faUserAlt, faFile, faBriefcase, faAddressCard, faImages } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Navbar = (props) => {\r\n    \r\n    const toggleMenu = () => {\r\n        let element = document.getElementById('menu');\r\n        let overlay = document.getElementById('hiddenOverlay');\r\n        if(element.style.display === 'grid') {\r\n            element.style.display = 'none';\r\n        } else {\r\n            element.style.display = 'grid';\r\n            overlay.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        let overlay = document.getElementById('hiddenOverlay');\r\n        let element = document.getElementById('menu');\r\n        element.style.display = 'none';\r\n        overlay.style.display = 'none';\r\n    }\r\n\r\n    const scrollIntoView = (id) => {\r\n        document.getElementById(id).scrollIntoView({block: \"start\"});\r\n    }\r\n    \r\n    return [\r\n        <div id=\"hiddenOverlay\" onClick={toggleOverlay}></div>,\r\n        <div className=\"navbar-container\">\r\n            <div id=\"menu\" className=\"menu\" onClick={toggleMenu}>\r\n                <div className=\"menu-item\" onClick={() => scrollIntoView('home')}>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                        Home\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\" onClick={() => scrollIntoView('about')}>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faUserAlt} />\r\n                        About\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faFile} />\r\n                        Skills\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faBriefcase} />\r\n                        Qualifications\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faImages} />\r\n                        Portfolio\r\n                    </div>\r\n                </div>\r\n                <div className=\"menu-item\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faAddressCard} />\r\n                        Contact\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar\">\r\n                <div className=\"float_left\">Shankar</div>\r\n                <div className=\"float_right\" onClick={toggleMenu}>\r\n                    <FontAwesomeIcon icon={faCog} />\r\n                </div>\r\n                <div className=\"float_right\" onClick={props.changeTheme}>\r\n                    <FontAwesomeIcon icon={faMoon} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ];\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../../styles/theme.scss';\r\nimport './home.scss';\r\n\r\nimport Navbar from '../navbar/navbar';\r\n\r\nimport { faFacebookF, faGithubAlt, faLinkedinIn } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"home-container\" id=\"home\">\r\n            <div className=\"media-image-container\">\r\n                <div className=\"media-container\">\r\n                    <a href=\"https://www.linkedin.com/in/shankarkruthiventi/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faLinkedinIn} />\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/shankar.kruthiventi/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faFacebookF} />\r\n                    </a>\r\n                    <a href=\"https://github.com/shankar-kruthiventi\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faGithubAlt} />\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"home home-desktop\">\r\n                    <div className=\"name\">Hi, I'm Shankar</div>\r\n                    <div className=\"designation\">Front-end Engineer</div>\r\n                    <div className=\"experience\">\r\n                        I have 5+ years of experience in Modern Front-end Development.\r\n                    </div>\r\n                    <div className=\"experience\">\r\n                        Have built aesthetic and functional applications using Angular, React and Node\r\n                    </div>\r\n\r\n                    <div className=\"contact-button-container\">\r\n                        <button className=\"contact-button\">\r\n                            Contact Me &nbsp;\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"image-container\"></div>\r\n            </div>\r\n            <div className=\"home home-mobile\">\r\n                <div className=\"name\">Hi, I'm Shankar</div>\r\n                <div className=\"designation\">Front-end Engineer</div>\r\n                <div className=\"experience\">\r\n                    I have 5+ years of experience in Modern Front-end Development.\r\n                </div>\r\n                <div className=\"experience\">\r\n                    Have built aesthetic and functional applications using Angular, React and Node\r\n                </div>\r\n\r\n                <div className=\"contact-button-container\">\r\n                    <button className=\"contact-button\">\r\n                        Contact Me &nbsp;\r\n                    <FontAwesomeIcon icon={faArrowRight} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <Navbar changeTheme={props.changeTheme} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../../styles/theme.scss';\r\nimport './about.scss';\r\n\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-container\"  id=\"about\">\r\n            <div className=\"about-title\">My Introduction</div>\r\n            <div className=\"about-image\"></div>\r\n            <div className=\"about-desc\">Web developer with extensive knowledge and years of experience in web technologies</div>\r\n            <div className=\"about\">\r\n                <div className=\"about-col\">\r\n                    <div>05+</div>\r\n                    <div>Years experience</div>\r\n                </div>\r\n                <div className=\"about-col\">\r\n                    <div>600000+</div>\r\n                    <div>completed lines of code</div>\r\n                </div>\r\n                <div className=\"about-col\">\r\n                    <div>03+</div>\r\n                    <div>Worked with Companies</div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"about-resume-button\">\r\n                <button className=\"resume-button\">Download CV &nbsp;\r\n                    <FontAwesomeIcon icon={faDownload} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport '../styles/theme.scss';\r\nimport './portfolio.scss';\r\n\r\nimport Home from '../pages/home/home';\r\nimport About from '../pages/about/about';\r\n\r\nconst Portfolio = (props) => {\r\n\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <Home changeTheme={props.changeTheme}/>\r\n            <About />\r\n            <div style={{height: '600px'}}>sdfsdf</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Portfolio;","import React, { useState } from 'react';\nimport './App.scss';\n\nimport Portfolio from './components/portfolio';\n\nfunction App() {\n\n  const [theme, setTheme] = useState('dark');\n\n  const changeTheme = () => {\n      return theme === 'light' ? setTheme('dark') : setTheme('light');\n  }\n\n  return (\n    <div className={`App ${theme}`}>\n      <Portfolio changeTheme={changeTheme}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}